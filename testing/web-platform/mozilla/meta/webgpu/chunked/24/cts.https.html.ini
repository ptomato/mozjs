[cts.https.html?q=webgpu:api,validation,render_pass,render_pass_descriptor:timestampWrites,query_set_type:*]
  [:queryTypeA="occlusion";queryTypeB="occlusion"]
    expected:
      if os == "mac": PASS
      FAIL

  [:queryTypeA="occlusion";queryTypeB="timestamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:queryTypeA="timestamp";queryTypeB="occlusion"]
    expected:
      if os == "mac": PASS
      FAIL

  [:queryTypeA="timestamp";queryTypeB="timestamp"]
    expected:
      if os == "mac": PASS
      FAIL


[cts.https.html?q=webgpu:api,validation,render_pipeline,depth_stencil_state:stencil_write:*]
  [:isAsync=false;format="depth32float";faceAndOpType="frontFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontFailOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontFailOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontFailOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontFailOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontDepthFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontDepthFailOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontPassOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontPassOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontPassOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontPassOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontPassOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="frontPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backFailOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backFailOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backFailOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backFailOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backDepthFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backDepthFailOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backPassOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backPassOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backPassOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backPassOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backPassOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth32float";faceAndOpType="backPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontFailOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontFailOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontFailOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontFailOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontPassOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontPassOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontPassOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontPassOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontPassOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="frontPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backFailOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backFailOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backFailOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backFailOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backDepthFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backDepthFailOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backPassOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backPassOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backPassOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backPassOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backPassOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";faceAndOpType="backPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontFailOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontFailOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontFailOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontFailOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontDepthFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontDepthFailOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontPassOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontPassOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontPassOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontPassOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontPassOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="frontPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backFailOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backFailOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backFailOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backFailOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backDepthFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backDepthFailOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backPassOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backPassOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backPassOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backPassOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backPassOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="stencil8";faceAndOpType="backPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontFailOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontFailOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontFailOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontFailOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontDepthFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontDepthFailOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontPassOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontPassOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontPassOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontPassOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontPassOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="frontPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backFailOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backFailOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backFailOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backFailOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backDepthFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backDepthFailOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backPassOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backPassOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backPassOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backPassOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backPassOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";faceAndOpType="backPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="keep"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="zero"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="replace"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="invert"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="_undef_"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="keep"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="zero"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="replace"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="invert"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="increment-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="decrement-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="increment-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="decrement-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="_undef_"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="keep"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="zero"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="replace"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="invert"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="increment-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="increment-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="_undef_"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="keep"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="zero"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="replace"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="invert"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="increment-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="decrement-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="increment-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="decrement-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backFailOp";op="_undef_"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backFailOp";op="keep"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backFailOp";op="zero"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backFailOp";op="replace"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backFailOp";op="invert"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backFailOp";op="increment-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backFailOp";op="decrement-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backFailOp";op="increment-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backFailOp";op="decrement-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="_undef_"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="keep"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="zero"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="replace"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="invert"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="increment-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="decrement-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="increment-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="decrement-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backPassOp";op="_undef_"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backPassOp";op="keep"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backPassOp";op="zero"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backPassOp";op="replace"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backPassOp";op="invert"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backPassOp";op="increment-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backPassOp";op="decrement-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backPassOp";op="increment-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";faceAndOpType="backPassOp";op="decrement-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontFailOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontDepthFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontDepthFailOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontPassOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontPassOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontPassOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontPassOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontPassOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="frontPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backFailOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backDepthFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backDepthFailOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backPassOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backPassOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backPassOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backPassOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backPassOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth32float";faceAndOpType="backPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontFailOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontPassOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontPassOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontPassOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontPassOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontPassOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="frontPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backFailOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backDepthFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backDepthFailOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backPassOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backPassOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backPassOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backPassOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backPassOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";faceAndOpType="backPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontFailOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontDepthFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontDepthFailOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontPassOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontPassOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontPassOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontPassOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontPassOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="frontPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backFailOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backDepthFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backDepthFailOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backPassOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backPassOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backPassOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backPassOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backPassOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="stencil8";faceAndOpType="backPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontFailOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontDepthFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontDepthFailOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontPassOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontPassOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontPassOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontPassOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontPassOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="frontPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backFailOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backDepthFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backDepthFailOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backPassOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backPassOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backPassOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backPassOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backPassOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";faceAndOpType="backPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="frontPassOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backDepthFailOp";op="decrement-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="keep"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="zero"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="replace"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="invert"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="increment-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="decrement-clamp"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="increment-wrap"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";faceAndOpType="backPassOp";op="decrement-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="_undef_"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="keep"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="zero"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="replace"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="invert"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="increment-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="decrement-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="increment-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontFailOp";op="decrement-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="_undef_"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="keep"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="zero"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="replace"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="invert"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="increment-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="decrement-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="increment-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontDepthFailOp";op="decrement-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="_undef_"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="keep"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="zero"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="replace"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="invert"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="increment-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="decrement-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="increment-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="frontPassOp";op="decrement-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backFailOp";op="_undef_"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backFailOp";op="keep"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backFailOp";op="zero"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backFailOp";op="replace"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backFailOp";op="invert"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backFailOp";op="increment-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backFailOp";op="decrement-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backFailOp";op="increment-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backFailOp";op="decrement-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="_undef_"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="keep"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="zero"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="replace"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="invert"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="increment-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="decrement-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="increment-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backDepthFailOp";op="decrement-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backPassOp";op="_undef_"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backPassOp";op="keep"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backPassOp";op="zero"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backPassOp";op="replace"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backPassOp";op="invert"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backPassOp";op="increment-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backPassOp";op="decrement-clamp"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backPassOp";op="increment-wrap"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";faceAndOpType="backPassOp";op="decrement-wrap"]
    expected:
      if os == "mac": PASS
      FAIL


[cts.https.html?q=webgpu:api,validation,render_pipeline,fragment_state:color_target_exists:*]
  [:isAsync=false]
    expected: FAIL

  [:isAsync=true]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,render_pipeline,depth_stencil_state:format:*]
  [:isAsync=false;format="r8unorm"]
    expected: FAIL

  [:isAsync=false;format="r8snorm"]
    expected: FAIL

  [:isAsync=false;format="r8uint"]
    expected: FAIL

  [:isAsync=false;format="r8sint"]
    expected: FAIL

  [:isAsync=false;format="r16uint"]
    expected: FAIL

  [:isAsync=false;format="r16sint"]
    expected: FAIL

  [:isAsync=false;format="r16float"]
    expected: FAIL

  [:isAsync=false;format="rg8unorm"]
    expected: FAIL

  [:isAsync=false;format="rg8snorm"]
    expected: FAIL

  [:isAsync=false;format="rg8uint"]
    expected: FAIL

  [:isAsync=false;format="rg8sint"]
    expected: FAIL

  [:isAsync=false;format="r32uint"]
    expected: FAIL

  [:isAsync=false;format="r32sint"]
    expected: FAIL

  [:isAsync=false;format="r32float"]
    expected: FAIL

  [:isAsync=false;format="rg16uint"]
    expected: FAIL

  [:isAsync=false;format="rg16sint"]
    expected: FAIL

  [:isAsync=false;format="rg16float"]
    expected: FAIL

  [:isAsync=false;format="rgba8unorm"]
    expected: FAIL

  [:isAsync=false;format="rgba8unorm-srgb"]
    expected: FAIL

  [:isAsync=false;format="rgba8snorm"]
    expected: FAIL

  [:isAsync=false;format="rgba8uint"]
    expected: FAIL

  [:isAsync=false;format="rgba8sint"]
    expected: FAIL

  [:isAsync=false;format="bgra8unorm"]
    expected: FAIL

  [:isAsync=false;format="bgra8unorm-srgb"]
    expected: FAIL

  [:isAsync=false;format="rgb10a2unorm"]
    expected: FAIL

  [:isAsync=false;format="rg11b10ufloat"]
    expected: FAIL

  [:isAsync=false;format="rgb9e5ufloat"]
    expected: FAIL

  [:isAsync=false;format="rg32uint"]
    expected: FAIL

  [:isAsync=false;format="rg32sint"]
    expected: FAIL

  [:isAsync=false;format="rg32float"]
    expected: FAIL

  [:isAsync=false;format="rgba16uint"]
    expected: FAIL

  [:isAsync=false;format="rgba16sint"]
    expected: FAIL

  [:isAsync=false;format="rgba16float"]
    expected: FAIL

  [:isAsync=false;format="rgba32uint"]
    expected: FAIL

  [:isAsync=false;format="rgba32sint"]
    expected: FAIL

  [:isAsync=false;format="rgba32float"]
    expected: FAIL

  [:isAsync=false;format="depth32float"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm"]
    expected: FAIL

  [:isAsync=false;format="stencil8"]
    expected: FAIL

  [:isAsync=false;format="depth24plus"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8"]
    expected: FAIL

  [:isAsync=false;format="bc1-rgba-unorm"]
    expected: FAIL

  [:isAsync=false;format="bc1-rgba-unorm-srgb"]
    expected: FAIL

  [:isAsync=false;format="bc2-rgba-unorm"]
    expected: FAIL

  [:isAsync=false;format="bc2-rgba-unorm-srgb"]
    expected: FAIL

  [:isAsync=false;format="bc3-rgba-unorm"]
    expected: FAIL

  [:isAsync=false;format="bc3-rgba-unorm-srgb"]
    expected: FAIL

  [:isAsync=false;format="bc4-r-unorm"]
    expected: FAIL

  [:isAsync=false;format="bc4-r-snorm"]
    expected: FAIL

  [:isAsync=false;format="bc5-rg-unorm"]
    expected: FAIL

  [:isAsync=false;format="bc5-rg-snorm"]
    expected: FAIL

  [:isAsync=false;format="bc6h-rgb-ufloat"]
    expected: FAIL

  [:isAsync=false;format="bc6h-rgb-float"]
    expected: FAIL

  [:isAsync=false;format="bc7-rgba-unorm"]
    expected: FAIL

  [:isAsync=false;format="bc7-rgba-unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="r8unorm"]
    expected: FAIL

  [:isAsync=true;format="r8snorm"]
    expected: FAIL

  [:isAsync=true;format="r8uint"]
    expected: FAIL

  [:isAsync=true;format="r8sint"]
    expected: FAIL

  [:isAsync=true;format="r16uint"]
    expected: FAIL

  [:isAsync=true;format="r16sint"]
    expected: FAIL

  [:isAsync=true;format="r16float"]
    expected: FAIL

  [:isAsync=true;format="rg8unorm"]
    expected: FAIL

  [:isAsync=true;format="rg8snorm"]
    expected: FAIL

  [:isAsync=true;format="rg8uint"]
    expected: FAIL

  [:isAsync=true;format="rg8sint"]
    expected: FAIL

  [:isAsync=true;format="r32uint"]
    expected: FAIL

  [:isAsync=true;format="r32sint"]
    expected: FAIL

  [:isAsync=true;format="r32float"]
    expected: FAIL

  [:isAsync=true;format="rg16uint"]
    expected: FAIL

  [:isAsync=true;format="rg16sint"]
    expected: FAIL

  [:isAsync=true;format="rg16float"]
    expected: FAIL

  [:isAsync=true;format="rgba8unorm"]
    expected: FAIL

  [:isAsync=true;format="rgba8unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="rgba8snorm"]
    expected: FAIL

  [:isAsync=true;format="rgba8uint"]
    expected: FAIL

  [:isAsync=true;format="rgba8sint"]
    expected: FAIL

  [:isAsync=true;format="bgra8unorm"]
    expected: FAIL

  [:isAsync=true;format="bgra8unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="rgb10a2unorm"]
    expected: FAIL

  [:isAsync=true;format="rg11b10ufloat"]
    expected: FAIL

  [:isAsync=true;format="rgb9e5ufloat"]
    expected: FAIL

  [:isAsync=true;format="rg32uint"]
    expected: FAIL

  [:isAsync=true;format="rg32sint"]
    expected: FAIL

  [:isAsync=true;format="rg32float"]
    expected: FAIL

  [:isAsync=true;format="rgba16uint"]
    expected: FAIL

  [:isAsync=true;format="rgba16sint"]
    expected: FAIL

  [:isAsync=true;format="rgba16float"]
    expected: FAIL

  [:isAsync=true;format="rgba32uint"]
    expected: FAIL

  [:isAsync=true;format="rgba32sint"]
    expected: FAIL

  [:isAsync=true;format="rgba32float"]
    expected: FAIL

  [:isAsync=true;format="depth32float"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm"]
    expected: FAIL

  [:isAsync=true;format="stencil8"]
    expected: FAIL

  [:isAsync=true;format="depth24plus"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8"]
    expected: FAIL

  [:isAsync=true;format="depth32float-stencil8"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="bc1-rgba-unorm"]
    expected: FAIL

  [:isAsync=true;format="bc1-rgba-unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="bc2-rgba-unorm"]
    expected: FAIL

  [:isAsync=true;format="bc2-rgba-unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="bc3-rgba-unorm"]
    expected: FAIL

  [:isAsync=true;format="bc3-rgba-unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="bc4-r-unorm"]
    expected: FAIL

  [:isAsync=true;format="bc4-r-snorm"]
    expected: FAIL

  [:isAsync=true;format="bc5-rg-unorm"]
    expected: FAIL

  [:isAsync=true;format="bc5-rg-snorm"]
    expected: FAIL

  [:isAsync=true;format="bc6h-rgb-ufloat"]
    expected: FAIL

  [:isAsync=true;format="bc6h-rgb-float"]
    expected: FAIL

  [:isAsync=true;format="bc7-rgba-unorm"]
    expected: FAIL

  [:isAsync=true;format="bc7-rgba-unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="etc2-rgb8unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="etc2-rgb8unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="etc2-rgb8a1unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="etc2-rgb8a1unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="etc2-rgba8unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="etc2-rgba8unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="eac-r11unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="eac-r11snorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="eac-rg11unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="eac-rg11snorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-4x4-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-4x4-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-5x4-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-5x4-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-5x5-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-5x5-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-6x5-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-6x5-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-6x6-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-6x6-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-8x5-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-8x5-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-8x6-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-8x6-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-8x8-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-8x8-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-10x5-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-10x5-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-10x6-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-10x6-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-10x8-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-10x8-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-10x10-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-10x10-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-12x10-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-12x10-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-12x12-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-12x12-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="etc2-rgb8unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="etc2-rgb8unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="etc2-rgb8a1unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="etc2-rgb8a1unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="etc2-rgba8unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="etc2-rgba8unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="eac-r11unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="eac-r11snorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="eac-rg11unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="eac-rg11snorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-4x4-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-4x4-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-5x4-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-5x4-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-5x5-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-5x5-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-6x5-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-6x5-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-6x6-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-6x6-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-8x5-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-8x5-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-8x6-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-8x6-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-8x8-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-8x8-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-10x5-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-10x5-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-10x6-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-10x6-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-10x8-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-10x8-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-10x10-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-10x10-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-12x10-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-12x10-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-12x12-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-12x12-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL


[cts.https.html?q=webgpu:api,validation,render_pipeline,fragment_state:pipeline_output_targets,blend:*]
  [:isAsync=false;format="r8unorm";componentCount=1]
    expected: FAIL

  [:isAsync=false;format="r8unorm";componentCount=2]
    expected: FAIL

  [:isAsync=false;format="r8unorm";componentCount=3]
    expected: FAIL

  [:isAsync=false;format="r8unorm";componentCount=4]
    expected: FAIL

  [:isAsync=false;format="rg8unorm";componentCount=1]
    expected: FAIL

  [:isAsync=false;format="rg8unorm";componentCount=2]
    expected: FAIL

  [:isAsync=false;format="rg8unorm";componentCount=3]
    expected: FAIL

  [:isAsync=false;format="rg8unorm";componentCount=4]
    expected: FAIL

  [:isAsync=false;format="rgba8unorm";componentCount=1]
    expected: FAIL

  [:isAsync=false;format="rgba8unorm";componentCount=2]
    expected: FAIL

  [:isAsync=false;format="rgba8unorm";componentCount=3]
    expected: FAIL

  [:isAsync=false;format="rgba8unorm";componentCount=4]
    expected: FAIL

  [:isAsync=false;format="bgra8unorm";componentCount=1]
    expected: FAIL

  [:isAsync=false;format="bgra8unorm";componentCount=2]
    expected: FAIL

  [:isAsync=false;format="bgra8unorm";componentCount=3]
    expected: FAIL

  [:isAsync=false;format="bgra8unorm";componentCount=4]
    expected: FAIL

  [:isAsync=true;format="r8unorm";componentCount=1]
    expected: FAIL

  [:isAsync=true;format="r8unorm";componentCount=2]
    expected: FAIL

  [:isAsync=true;format="r8unorm";componentCount=3]
    expected: FAIL

  [:isAsync=true;format="r8unorm";componentCount=4]
    expected: FAIL

  [:isAsync=true;format="rg8unorm";componentCount=1]
    expected: FAIL

  [:isAsync=true;format="rg8unorm";componentCount=2]
    expected: FAIL

  [:isAsync=true;format="rg8unorm";componentCount=3]
    expected: FAIL

  [:isAsync=true;format="rg8unorm";componentCount=4]
    expected: FAIL

  [:isAsync=true;format="rgba8unorm";componentCount=1]
    expected: FAIL

  [:isAsync=true;format="rgba8unorm";componentCount=2]
    expected: FAIL

  [:isAsync=true;format="rgba8unorm";componentCount=3]
    expected: FAIL

  [:isAsync=true;format="rgba8unorm";componentCount=4]
    expected: FAIL

  [:isAsync=true;format="bgra8unorm";componentCount=1]
    expected: FAIL

  [:isAsync=true;format="bgra8unorm";componentCount=2]
    expected: FAIL

  [:isAsync=true;format="bgra8unorm";componentCount=3]
    expected: FAIL

  [:isAsync=true;format="bgra8unorm";componentCount=4]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,render_pass,resolve:resolve_attachment:*]
  [:]
    expected: FAIL

  [:colorAttachmentSamples=1]
    expected: FAIL

  [:resolveTargetSamples=4]
    expected: FAIL

  [:resolveTargetUsage=1]
    expected: FAIL

  [:resolveTargetViewBaseMipLevel=1;resolveTargetHeight=4;resolveTargetWidth=4]
    expected: FAIL

  [:resolveTargetViewBaseMipLevel=1;resolveTargetViewMipCount=2;resolveTargetHeight=4;resolveTargetWidth=4]
    expected: FAIL

  [:resolveTargetInvalid=true]
    expected: FAIL

  [:resolveTargetViewMipCount=2]
    expected: FAIL

  [:resolveTargetViewBaseArrayLayer=1]
    expected: FAIL

  [:resolveTargetViewBaseArrayLayer=1;resolveTargetViewArrayLayerCount=2]
    expected: FAIL

  [:resolveTargetViewArrayLayerCount=2]
    expected: FAIL

  [:otherAttachmentFormat="bgra8unorm"]
    expected: FAIL

  [:colorAttachmentFormat="bgra8unorm"]
    expected: FAIL

  [:colorAttachmentFormat="rgba8unorm-srgb"]
    expected: FAIL

  [:resolveTargetFormat="bgra8unorm"]
    expected: FAIL

  [:resolveTargetFormat="rgba8unorm-srgb"]
    expected: FAIL

  [:colorAttachmentHeight=4]
    expected: FAIL

  [:colorAttachmentWidth=4]
    expected: FAIL

  [:resolveTargetHeight=4]
    expected: FAIL

  [:resolveTargetWidth=4]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,render_pipeline,fragment_state:targets_format_filterable:*]
  [:isAsync=false;format="r8unorm"]
    expected: FAIL

  [:isAsync=false;format="r8uint"]
    expected: FAIL

  [:isAsync=false;format="r8sint"]
    expected: FAIL

  [:isAsync=false;format="r16uint"]
    expected: FAIL

  [:isAsync=false;format="r16sint"]
    expected: FAIL

  [:isAsync=false;format="r16float"]
    expected: FAIL

  [:isAsync=false;format="rg8unorm"]
    expected: FAIL

  [:isAsync=false;format="rg8uint"]
    expected: FAIL

  [:isAsync=false;format="rg8sint"]
    expected: FAIL

  [:isAsync=false;format="r32uint"]
    expected: FAIL

  [:isAsync=false;format="r32sint"]
    expected: FAIL

  [:isAsync=false;format="r32float"]
    expected: FAIL

  [:isAsync=false;format="rg16uint"]
    expected: FAIL

  [:isAsync=false;format="rg16sint"]
    expected: FAIL

  [:isAsync=false;format="rg16float"]
    expected: FAIL

  [:isAsync=false;format="rgba8unorm"]
    expected: FAIL

  [:isAsync=false;format="rgba8unorm-srgb"]
    expected: FAIL

  [:isAsync=false;format="rgba8uint"]
    expected: FAIL

  [:isAsync=false;format="rgba8sint"]
    expected: FAIL

  [:isAsync=false;format="bgra8unorm"]
    expected: FAIL

  [:isAsync=false;format="bgra8unorm-srgb"]
    expected: FAIL

  [:isAsync=false;format="rgb10a2unorm"]
    expected: FAIL

  [:isAsync=false;format="rg32uint"]
    expected: FAIL

  [:isAsync=false;format="rg32sint"]
    expected: FAIL

  [:isAsync=false;format="rg32float"]
    expected: FAIL

  [:isAsync=false;format="rgba16uint"]
    expected: FAIL

  [:isAsync=false;format="rgba16sint"]
    expected: FAIL

  [:isAsync=false;format="rgba16float"]
    expected: FAIL

  [:isAsync=false;format="rgba32uint"]
    expected: FAIL

  [:isAsync=false;format="rgba32sint"]
    expected: FAIL

  [:isAsync=false;format="rgba32float"]
    expected: FAIL

  [:isAsync=true;format="r8unorm"]
    expected: FAIL

  [:isAsync=true;format="r8uint"]
    expected: FAIL

  [:isAsync=true;format="r8sint"]
    expected: FAIL

  [:isAsync=true;format="r16uint"]
    expected: FAIL

  [:isAsync=true;format="r16sint"]
    expected: FAIL

  [:isAsync=true;format="r16float"]
    expected: FAIL

  [:isAsync=true;format="rg8unorm"]
    expected: FAIL

  [:isAsync=true;format="rg8uint"]
    expected: FAIL

  [:isAsync=true;format="rg8sint"]
    expected: FAIL

  [:isAsync=true;format="r32uint"]
    expected: FAIL

  [:isAsync=true;format="r32sint"]
    expected: FAIL

  [:isAsync=true;format="r32float"]
    expected: FAIL

  [:isAsync=true;format="rg16uint"]
    expected: FAIL

  [:isAsync=true;format="rg16sint"]
    expected: FAIL

  [:isAsync=true;format="rg16float"]
    expected: FAIL

  [:isAsync=true;format="rgba8unorm"]
    expected: FAIL

  [:isAsync=true;format="rgba8unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="rgba8uint"]
    expected: FAIL

  [:isAsync=true;format="rgba8sint"]
    expected: FAIL

  [:isAsync=true;format="bgra8unorm"]
    expected: FAIL

  [:isAsync=true;format="bgra8unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="rgb10a2unorm"]
    expected: FAIL

  [:isAsync=true;format="rg32uint"]
    expected: FAIL

  [:isAsync=true;format="rg32sint"]
    expected: FAIL

  [:isAsync=true;format="rg32float"]
    expected: FAIL

  [:isAsync=true;format="rgba16uint"]
    expected: FAIL

  [:isAsync=true;format="rgba16sint"]
    expected: FAIL

  [:isAsync=true;format="rgba16float"]
    expected: FAIL

  [:isAsync=true;format="rgba32uint"]
    expected: FAIL

  [:isAsync=true;format="rgba32sint"]
    expected: FAIL

  [:isAsync=true;format="rgba32float"]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,render_pipeline,depth_stencil_state:stencil_test:*]
  [:isAsync=false;format="depth32float";face="front";compare="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth32float";face="front";compare="never"]
    expected: FAIL

  [:isAsync=false;format="depth32float";face="front";compare="less"]
    expected: FAIL

  [:isAsync=false;format="depth32float";face="front";compare="equal"]
    expected: FAIL

  [:isAsync=false;format="depth32float";face="front";compare="less-equal"]
    expected: FAIL

  [:isAsync=false;format="depth32float";face="front";compare="greater"]
    expected: FAIL

  [:isAsync=false;format="depth32float";face="front";compare="not-equal"]
    expected: FAIL

  [:isAsync=false;format="depth32float";face="front";compare="greater-equal"]
    expected: FAIL

  [:isAsync=false;format="depth32float";face="front";compare="always"]
    expected: FAIL

  [:isAsync=false;format="depth32float";face="back";compare="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth32float";face="back";compare="never"]
    expected: FAIL

  [:isAsync=false;format="depth32float";face="back";compare="less"]
    expected: FAIL

  [:isAsync=false;format="depth32float";face="back";compare="equal"]
    expected: FAIL

  [:isAsync=false;format="depth32float";face="back";compare="less-equal"]
    expected: FAIL

  [:isAsync=false;format="depth32float";face="back";compare="greater"]
    expected: FAIL

  [:isAsync=false;format="depth32float";face="back";compare="not-equal"]
    expected: FAIL

  [:isAsync=false;format="depth32float";face="back";compare="greater-equal"]
    expected: FAIL

  [:isAsync=false;format="depth32float";face="back";compare="always"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";face="front";compare="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";face="front";compare="never"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";face="front";compare="less"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";face="front";compare="equal"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";face="front";compare="less-equal"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";face="front";compare="greater"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";face="front";compare="not-equal"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";face="front";compare="greater-equal"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";face="front";compare="always"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";face="back";compare="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";face="back";compare="never"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";face="back";compare="less"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";face="back";compare="equal"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";face="back";compare="less-equal"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";face="back";compare="greater"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";face="back";compare="not-equal"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";face="back";compare="greater-equal"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";face="back";compare="always"]
    expected: FAIL

  [:isAsync=false;format="stencil8";face="front";compare="_undef_"]
    expected: FAIL

  [:isAsync=false;format="stencil8";face="front";compare="never"]
    expected: FAIL

  [:isAsync=false;format="stencil8";face="front";compare="less"]
    expected: FAIL

  [:isAsync=false;format="stencil8";face="front";compare="equal"]
    expected: FAIL

  [:isAsync=false;format="stencil8";face="front";compare="less-equal"]
    expected: FAIL

  [:isAsync=false;format="stencil8";face="front";compare="greater"]
    expected: FAIL

  [:isAsync=false;format="stencil8";face="front";compare="not-equal"]
    expected: FAIL

  [:isAsync=false;format="stencil8";face="front";compare="greater-equal"]
    expected: FAIL

  [:isAsync=false;format="stencil8";face="front";compare="always"]
    expected: FAIL

  [:isAsync=false;format="stencil8";face="back";compare="_undef_"]
    expected: FAIL

  [:isAsync=false;format="stencil8";face="back";compare="never"]
    expected: FAIL

  [:isAsync=false;format="stencil8";face="back";compare="less"]
    expected: FAIL

  [:isAsync=false;format="stencil8";face="back";compare="equal"]
    expected: FAIL

  [:isAsync=false;format="stencil8";face="back";compare="less-equal"]
    expected: FAIL

  [:isAsync=false;format="stencil8";face="back";compare="greater"]
    expected: FAIL

  [:isAsync=false;format="stencil8";face="back";compare="not-equal"]
    expected: FAIL

  [:isAsync=false;format="stencil8";face="back";compare="greater-equal"]
    expected: FAIL

  [:isAsync=false;format="stencil8";face="back";compare="always"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";face="front";compare="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";face="front";compare="never"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";face="front";compare="less"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";face="front";compare="equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";face="front";compare="less-equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";face="front";compare="greater"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";face="front";compare="not-equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";face="front";compare="greater-equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";face="front";compare="always"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";face="back";compare="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";face="back";compare="never"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";face="back";compare="less"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";face="back";compare="equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";face="back";compare="less-equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";face="back";compare="greater"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";face="back";compare="not-equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";face="back";compare="greater-equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";face="back";compare="always"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";face="front";compare="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";face="front";compare="never"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";face="front";compare="less"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";face="front";compare="equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";face="front";compare="less-equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";face="front";compare="greater"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";face="front";compare="not-equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";face="front";compare="greater-equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";face="front";compare="always"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";face="back";compare="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";face="back";compare="never"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";face="back";compare="less"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";face="back";compare="equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";face="back";compare="less-equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";face="back";compare="greater"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";face="back";compare="not-equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";face="back";compare="greater-equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";face="back";compare="always"]
    expected: FAIL

  [:isAsync=false;format="depth32float-stencil8";face="front";compare="_undef_"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";face="front";compare="never"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";face="front";compare="less"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";face="front";compare="equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";face="front";compare="less-equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";face="front";compare="greater"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";face="front";compare="not-equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";face="front";compare="greater-equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";face="front";compare="always"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";face="back";compare="_undef_"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";face="back";compare="never"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";face="back";compare="less"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";face="back";compare="equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";face="back";compare="less-equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";face="back";compare="greater"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";face="back";compare="not-equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";face="back";compare="greater-equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";face="back";compare="always"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float";face="front";compare="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="front";compare="never"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="front";compare="less"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="front";compare="equal"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="front";compare="less-equal"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="front";compare="greater"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="front";compare="not-equal"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="front";compare="greater-equal"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="front";compare="always"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="back";compare="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="back";compare="never"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="back";compare="less"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="back";compare="equal"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="back";compare="less-equal"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="back";compare="greater"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="back";compare="not-equal"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="back";compare="greater-equal"]
    expected: FAIL

  [:isAsync=true;format="depth32float";face="back";compare="always"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="front";compare="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="front";compare="never"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="front";compare="less"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="front";compare="equal"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="front";compare="less-equal"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="front";compare="greater"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="front";compare="not-equal"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="front";compare="greater-equal"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="front";compare="always"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="back";compare="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="back";compare="never"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="back";compare="less"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="back";compare="equal"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="back";compare="less-equal"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="back";compare="greater"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="back";compare="not-equal"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="back";compare="greater-equal"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";face="back";compare="always"]
    expected: FAIL

  [:isAsync=true;format="stencil8";face="front";compare="_undef_"]
    expected: FAIL

  [:isAsync=true;format="stencil8";face="front";compare="never"]
    expected: FAIL

  [:isAsync=true;format="stencil8";face="front";compare="less"]
    expected: FAIL

  [:isAsync=true;format="stencil8";face="front";compare="equal"]
    expected: FAIL

  [:isAsync=true;format="stencil8";face="front";compare="less-equal"]
    expected: FAIL

  [:isAsync=true;format="stencil8";face="front";compare="greater"]
    expected: FAIL

  [:isAsync=true;format="stencil8";face="front";compare="not-equal"]
    expected: FAIL

  [:isAsync=true;format="stencil8";face="front";compare="greater-equal"]
    expected: FAIL

  [:isAsync=true;format="stencil8";face="front";compare="always"]
    expected: FAIL

  [:isAsync=true;format="stencil8";face="back";compare="_undef_"]
    expected: FAIL

  [:isAsync=true;format="stencil8";face="back";compare="never"]
    expected: FAIL

  [:isAsync=true;format="stencil8";face="back";compare="less"]
    expected: FAIL

  [:isAsync=true;format="stencil8";face="back";compare="equal"]
    expected: FAIL

  [:isAsync=true;format="stencil8";face="back";compare="less-equal"]
    expected: FAIL

  [:isAsync=true;format="stencil8";face="back";compare="greater"]
    expected: FAIL

  [:isAsync=true;format="stencil8";face="back";compare="not-equal"]
    expected: FAIL

  [:isAsync=true;format="stencil8";face="back";compare="greater-equal"]
    expected: FAIL

  [:isAsync=true;format="stencil8";face="back";compare="always"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="front";compare="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="front";compare="never"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="front";compare="less"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="front";compare="equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="front";compare="less-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="front";compare="greater"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="front";compare="not-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="front";compare="greater-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="front";compare="always"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="back";compare="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="back";compare="never"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="back";compare="less"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="back";compare="equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="back";compare="less-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="back";compare="greater"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="back";compare="not-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="back";compare="greater-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";face="back";compare="always"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";face="front";compare="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";face="front";compare="never"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";face="front";compare="less"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";face="front";compare="equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";face="front";compare="less-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";face="front";compare="greater"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";face="front";compare="not-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";face="front";compare="greater-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";face="front";compare="always"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";face="back";compare="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";face="back";compare="never"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";face="back";compare="less"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";face="back";compare="equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";face="back";compare="less-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";face="back";compare="greater"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";face="back";compare="not-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";face="back";compare="greater-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";face="back";compare="always"]
    expected: FAIL

  [:isAsync=true;format="depth32float-stencil8";face="front";compare="_undef_"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";face="front";compare="never"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";face="front";compare="less"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";face="front";compare="equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";face="front";compare="less-equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";face="front";compare="greater"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";face="front";compare="not-equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";face="front";compare="greater-equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";face="front";compare="always"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";face="back";compare="_undef_"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";face="back";compare="never"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";face="back";compare="less"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";face="back";compare="equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";face="back";compare="less-equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";face="back";compare="greater"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";face="back";compare="not-equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";face="back";compare="greater-equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";face="back";compare="always"]
    expected:
      if os == "mac": PASS
      FAIL


[cts.https.html?q=webgpu:api,validation,render_pipeline,fragment_state:targets_format_renderable:*]
  [:isAsync=false;format="r8unorm"]
    expected: FAIL

  [:isAsync=false;format="r8snorm"]
    expected: FAIL

  [:isAsync=false;format="r8uint"]
    expected: FAIL

  [:isAsync=false;format="r8sint"]
    expected: FAIL

  [:isAsync=false;format="r16uint"]
    expected: FAIL

  [:isAsync=false;format="r16sint"]
    expected: FAIL

  [:isAsync=false;format="r16float"]
    expected: FAIL

  [:isAsync=false;format="rg8unorm"]
    expected: FAIL

  [:isAsync=false;format="rg8snorm"]
    expected: FAIL

  [:isAsync=false;format="rg8uint"]
    expected: FAIL

  [:isAsync=false;format="rg8sint"]
    expected: FAIL

  [:isAsync=false;format="r32uint"]
    expected: FAIL

  [:isAsync=false;format="r32sint"]
    expected: FAIL

  [:isAsync=false;format="r32float"]
    expected: FAIL

  [:isAsync=false;format="rg16uint"]
    expected: FAIL

  [:isAsync=false;format="rg16sint"]
    expected: FAIL

  [:isAsync=false;format="rg16float"]
    expected: FAIL

  [:isAsync=false;format="rgba8unorm"]
    expected: FAIL

  [:isAsync=false;format="rgba8unorm-srgb"]
    expected: FAIL

  [:isAsync=false;format="rgba8snorm"]
    expected: FAIL

  [:isAsync=false;format="rgba8uint"]
    expected: FAIL

  [:isAsync=false;format="rgba8sint"]
    expected: FAIL

  [:isAsync=false;format="bgra8unorm"]
    expected: FAIL

  [:isAsync=false;format="bgra8unorm-srgb"]
    expected: FAIL

  [:isAsync=false;format="rgb10a2unorm"]
    expected: FAIL

  [:isAsync=false;format="rg11b10ufloat"]
    expected: FAIL

  [:isAsync=false;format="rgb9e5ufloat"]
    expected: FAIL

  [:isAsync=false;format="rg32uint"]
    expected: FAIL

  [:isAsync=false;format="rg32sint"]
    expected: FAIL

  [:isAsync=false;format="rg32float"]
    expected: FAIL

  [:isAsync=false;format="rgba16uint"]
    expected: FAIL

  [:isAsync=false;format="rgba16sint"]
    expected: FAIL

  [:isAsync=false;format="rgba16float"]
    expected: FAIL

  [:isAsync=false;format="rgba32uint"]
    expected: FAIL

  [:isAsync=false;format="rgba32sint"]
    expected: FAIL

  [:isAsync=false;format="rgba32float"]
    expected: FAIL

  [:isAsync=false;format="depth32float"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm"]
    expected: FAIL

  [:isAsync=false;format="stencil8"]
    expected: FAIL

  [:isAsync=false;format="depth24plus"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8"]
    expected: FAIL

  [:isAsync=false;format="bc1-rgba-unorm"]
    expected: FAIL

  [:isAsync=false;format="bc1-rgba-unorm-srgb"]
    expected: FAIL

  [:isAsync=false;format="bc2-rgba-unorm"]
    expected: FAIL

  [:isAsync=false;format="bc2-rgba-unorm-srgb"]
    expected: FAIL

  [:isAsync=false;format="bc3-rgba-unorm"]
    expected: FAIL

  [:isAsync=false;format="bc3-rgba-unorm-srgb"]
    expected: FAIL

  [:isAsync=false;format="bc4-r-unorm"]
    expected: FAIL

  [:isAsync=false;format="bc4-r-snorm"]
    expected: FAIL

  [:isAsync=false;format="bc5-rg-unorm"]
    expected: FAIL

  [:isAsync=false;format="bc5-rg-snorm"]
    expected: FAIL

  [:isAsync=false;format="bc6h-rgb-ufloat"]
    expected: FAIL

  [:isAsync=false;format="bc6h-rgb-float"]
    expected: FAIL

  [:isAsync=false;format="bc7-rgba-unorm"]
    expected: FAIL

  [:isAsync=false;format="bc7-rgba-unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="r8unorm"]
    expected: FAIL

  [:isAsync=true;format="r8snorm"]
    expected: FAIL

  [:isAsync=true;format="r8uint"]
    expected: FAIL

  [:isAsync=true;format="r8sint"]
    expected: FAIL

  [:isAsync=true;format="r16uint"]
    expected: FAIL

  [:isAsync=true;format="r16sint"]
    expected: FAIL

  [:isAsync=true;format="r16float"]
    expected: FAIL

  [:isAsync=true;format="rg8unorm"]
    expected: FAIL

  [:isAsync=true;format="rg8snorm"]
    expected: FAIL

  [:isAsync=true;format="rg8uint"]
    expected: FAIL

  [:isAsync=true;format="rg8sint"]
    expected: FAIL

  [:isAsync=true;format="r32uint"]
    expected: FAIL

  [:isAsync=true;format="r32sint"]
    expected: FAIL

  [:isAsync=true;format="r32float"]
    expected: FAIL

  [:isAsync=true;format="rg16uint"]
    expected: FAIL

  [:isAsync=true;format="rg16sint"]
    expected: FAIL

  [:isAsync=true;format="rg16float"]
    expected: FAIL

  [:isAsync=true;format="rgba8unorm"]
    expected: FAIL

  [:isAsync=true;format="rgba8unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="rgba8snorm"]
    expected: FAIL

  [:isAsync=true;format="rgba8uint"]
    expected: FAIL

  [:isAsync=true;format="rgba8sint"]
    expected: FAIL

  [:isAsync=true;format="bgra8unorm"]
    expected: FAIL

  [:isAsync=true;format="bgra8unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="rgb10a2unorm"]
    expected: FAIL

  [:isAsync=true;format="rg11b10ufloat"]
    expected: FAIL

  [:isAsync=true;format="rgb9e5ufloat"]
    expected: FAIL

  [:isAsync=true;format="rg32uint"]
    expected: FAIL

  [:isAsync=true;format="rg32sint"]
    expected: FAIL

  [:isAsync=true;format="rg32float"]
    expected: FAIL

  [:isAsync=true;format="rgba16uint"]
    expected: FAIL

  [:isAsync=true;format="rgba16sint"]
    expected: FAIL

  [:isAsync=true;format="rgba16float"]
    expected: FAIL

  [:isAsync=true;format="rgba32uint"]
    expected: FAIL

  [:isAsync=true;format="rgba32sint"]
    expected: FAIL

  [:isAsync=true;format="rgba32float"]
    expected: FAIL

  [:isAsync=true;format="depth32float"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm"]
    expected: FAIL

  [:isAsync=true;format="stencil8"]
    expected: FAIL

  [:isAsync=true;format="depth24plus"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8"]
    expected: FAIL

  [:isAsync=true;format="depth32float-stencil8"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="bc1-rgba-unorm"]
    expected: FAIL

  [:isAsync=true;format="bc1-rgba-unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="bc2-rgba-unorm"]
    expected: FAIL

  [:isAsync=true;format="bc2-rgba-unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="bc3-rgba-unorm"]
    expected: FAIL

  [:isAsync=true;format="bc3-rgba-unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="bc4-r-unorm"]
    expected: FAIL

  [:isAsync=true;format="bc4-r-snorm"]
    expected: FAIL

  [:isAsync=true;format="bc5-rg-unorm"]
    expected: FAIL

  [:isAsync=true;format="bc5-rg-snorm"]
    expected: FAIL

  [:isAsync=true;format="bc6h-rgb-ufloat"]
    expected: FAIL

  [:isAsync=true;format="bc6h-rgb-float"]
    expected: FAIL

  [:isAsync=true;format="bc7-rgba-unorm"]
    expected: FAIL

  [:isAsync=true;format="bc7-rgba-unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="etc2-rgb8unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="etc2-rgb8unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="etc2-rgb8a1unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="etc2-rgb8a1unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="etc2-rgba8unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="etc2-rgba8unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="eac-r11unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="eac-r11snorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="eac-rg11unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="eac-rg11snorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-4x4-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-4x4-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-5x4-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-5x4-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-5x5-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-5x5-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-6x5-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-6x5-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-6x6-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-6x6-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-8x5-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-8x5-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-8x6-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-8x6-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-8x8-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-8x8-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-10x5-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-10x5-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-10x6-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-10x6-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-10x8-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-10x8-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-10x10-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-10x10-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-12x10-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-12x10-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-12x12-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="astc-12x12-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="etc2-rgb8unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="etc2-rgb8unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="etc2-rgb8a1unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="etc2-rgb8a1unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="etc2-rgba8unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="etc2-rgba8unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="eac-r11unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="eac-r11snorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="eac-rg11unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="eac-rg11snorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-4x4-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-4x4-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-5x4-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-5x4-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-5x5-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-5x5-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-6x5-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-6x5-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-6x6-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-6x6-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-8x5-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-8x5-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-8x6-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-8x6-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-8x8-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-8x8-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-10x5-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-10x5-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-10x6-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-10x6-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-10x8-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-10x8-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-10x10-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-10x10-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-12x10-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-12x10-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-12x12-unorm"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="astc-12x12-unorm-srgb"]
    expected:
      if os == "mac": PASS
      FAIL


[cts.https.html?q=webgpu:api,validation,render_pipeline,inter_stage:location,superset:*]
  [:]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,render_pipeline,inter_stage:location,mismatch:*]
  [:isAsync=false;outputs=["%40location(0)%20__:%20f32"\];inputs=["%40location(0)%20__:%20f32"\]]
    expected: FAIL

  [:isAsync=false;outputs=["%40location(0)%20__:%20f32"\];inputs=["%40location(1)%20__:%20f32"\]]
    expected: FAIL

  [:isAsync=false;outputs=["%40location(1)%20__:%20f32"\];inputs=["%40location(0)%20__:%20f32"\]]
    expected: FAIL

  [:isAsync=false;outputs=["%40location(0)%20__:%20f32","%40location(1)%20__:%20f32"\];inputs=["%40location(1)%20__:%20f32","%40location(0)%20__:%20f32"\]]
    expected: FAIL

  [:isAsync=false;outputs=["%40location(1)%20__:%20f32","%40location(0)%20__:%20f32"\];inputs=["%40location(0)%20__:%20f32","%40location(1)%20__:%20f32"\]]
    expected: FAIL

  [:isAsync=true;outputs=["%40location(0)%20__:%20f32"\];inputs=["%40location(0)%20__:%20f32"\]]
    expected: FAIL

  [:isAsync=true;outputs=["%40location(0)%20__:%20f32"\];inputs=["%40location(1)%20__:%20f32"\]]
    expected: FAIL

  [:isAsync=true;outputs=["%40location(1)%20__:%20f32"\];inputs=["%40location(0)%20__:%20f32"\]]
    expected: FAIL

  [:isAsync=true;outputs=["%40location(0)%20__:%20f32","%40location(1)%20__:%20f32"\];inputs=["%40location(1)%20__:%20f32","%40location(0)%20__:%20f32"\]]
    expected: FAIL

  [:isAsync=true;outputs=["%40location(1)%20__:%20f32","%40location(0)%20__:%20f32"\];inputs=["%40location(0)%20__:%20f32","%40location(1)%20__:%20f32"\]]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,render_pass,render_pass_descriptor:occlusionQuerySet,query_set_type:*]
  [:queryType="occlusion"]
    expected: FAIL

  [:queryType="timestamp"]
    expected:
      if os == "mac": PASS
      FAIL


[cts.https.html?q=webgpu:api,validation,render_pass,render_pass_descriptor:timestamp_writes_location:*]
  [:locationA="beginning";locationB="beginning"]
    expected:
      if os == "mac": PASS
      FAIL

  [:locationA="beginning";locationB="end"]
    expected:
      if os == "mac": PASS
      FAIL

  [:locationA="end";locationB="beginning"]
    expected:
      if os == "mac": PASS
      FAIL

  [:locationA="end";locationB="end"]
    expected:
      if os == "mac": PASS
      FAIL


[cts.https.html?q=webgpu:api,validation,render_pipeline,fragment_state:limits,maxColorAttachmentBytesPerSample,aligned:*]
  [:format="r8unorm"]
    expected: FAIL

  [:format="r8uint"]
    expected: FAIL

  [:format="r8sint"]
    expected: FAIL

  [:format="r16uint"]
    expected: FAIL

  [:format="r16sint"]
    expected: FAIL

  [:format="r16float"]
    expected: FAIL

  [:format="rg8unorm"]
    expected: FAIL

  [:format="rg8uint"]
    expected: FAIL

  [:format="rg8sint"]
    expected: FAIL

  [:format="r32uint"]
    expected: FAIL

  [:format="r32sint"]
    expected: FAIL

  [:format="r32float"]
    expected: FAIL

  [:format="rg16uint"]
    expected: FAIL

  [:format="rg16sint"]
    expected: FAIL

  [:format="rg16float"]
    expected: FAIL

  [:format="rgba8unorm"]
    expected: FAIL

  [:format="rgba8unorm-srgb"]
    expected: FAIL

  [:format="rgba8uint"]
    expected: FAIL

  [:format="rgba8sint"]
    expected: FAIL

  [:format="bgra8unorm"]
    expected: FAIL

  [:format="bgra8unorm-srgb"]
    expected: FAIL

  [:format="rgb10a2unorm"]
    expected: FAIL

  [:format="rg32uint"]
    expected: FAIL

  [:format="rg32sint"]
    expected: FAIL

  [:format="rg32float"]
    expected: FAIL

  [:format="rgba16uint"]
    expected: FAIL

  [:format="rgba16sint"]
    expected: FAIL

  [:format="rgba16float"]
    expected: FAIL

  [:format="rgba32uint"]
    expected: FAIL

  [:format="rgba32sint"]
    expected: FAIL

  [:format="rgba32float"]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,render_pipeline,depth_stencil_state:depth_write,frag_depth:*]
  [:isAsync=false;format="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth32float"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm"]
    expected: FAIL

  [:isAsync=false;format="stencil8"]
    expected: FAIL

  [:isAsync=false;format="depth24plus"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8"]
    expected: FAIL

  [:isAsync=true;format="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth32float"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm"]
    expected: FAIL

  [:isAsync=true;format="stencil8"]
    expected: FAIL

  [:isAsync=true;format="depth24plus"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8"]
    expected: FAIL

  [:isAsync=false;format="depth32float-stencil8"]
    expected: FAIL

  [:isAsync=true;format="depth32float-stencil8"]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,render_pass,render_pass_descriptor:timestampWrite,same_query_index:*]
  [:queryIndexA=0;queryIndexB=0]
    expected:
      if os == "mac": PASS
      FAIL

  [:queryIndexA=0;queryIndexB=1]
    expected:
      if os == "mac": PASS
      FAIL

  [:queryIndexA=1;queryIndexB=0]
    expected:
      if os == "mac": PASS
      FAIL

  [:queryIndexA=1;queryIndexB=1]
    expected:
      if os == "mac": PASS
      FAIL


[cts.https.html?q=webgpu:api,validation,render_pipeline,fragment_state:limits,maxColorAttachments:*]
  [:isAsync=false;targetsLength=8]
    expected: FAIL

  [:isAsync=false;targetsLength=9]
    expected: FAIL

  [:isAsync=true;targetsLength=8]
    expected: FAIL

  [:isAsync=true;targetsLength=9]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,render_pipeline,depth_stencil_state:depth_test:*]
  [:isAsync=false;format="depth32float";depthCompare="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth32float";depthCompare="never"]
    expected: FAIL

  [:isAsync=false;format="depth32float";depthCompare="less"]
    expected: FAIL

  [:isAsync=false;format="depth32float";depthCompare="equal"]
    expected: FAIL

  [:isAsync=false;format="depth32float";depthCompare="less-equal"]
    expected: FAIL

  [:isAsync=false;format="depth32float";depthCompare="greater"]
    expected: FAIL

  [:isAsync=false;format="depth32float";depthCompare="not-equal"]
    expected: FAIL

  [:isAsync=false;format="depth32float";depthCompare="greater-equal"]
    expected: FAIL

  [:isAsync=false;format="depth32float";depthCompare="always"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";depthCompare="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";depthCompare="never"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";depthCompare="less"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";depthCompare="equal"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";depthCompare="less-equal"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";depthCompare="greater"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";depthCompare="not-equal"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";depthCompare="greater-equal"]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";depthCompare="always"]
    expected: FAIL

  [:isAsync=false;format="stencil8";depthCompare="_undef_"]
    expected: FAIL

  [:isAsync=false;format="stencil8";depthCompare="never"]
    expected: FAIL

  [:isAsync=false;format="stencil8";depthCompare="less"]
    expected: FAIL

  [:isAsync=false;format="stencil8";depthCompare="equal"]
    expected: FAIL

  [:isAsync=false;format="stencil8";depthCompare="less-equal"]
    expected: FAIL

  [:isAsync=false;format="stencil8";depthCompare="greater"]
    expected: FAIL

  [:isAsync=false;format="stencil8";depthCompare="not-equal"]
    expected: FAIL

  [:isAsync=false;format="stencil8";depthCompare="greater-equal"]
    expected: FAIL

  [:isAsync=false;format="stencil8";depthCompare="always"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";depthCompare="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";depthCompare="never"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";depthCompare="less"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";depthCompare="equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";depthCompare="less-equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";depthCompare="greater"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";depthCompare="not-equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";depthCompare="greater-equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus";depthCompare="always"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";depthCompare="_undef_"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";depthCompare="never"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";depthCompare="less"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";depthCompare="equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";depthCompare="less-equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";depthCompare="greater"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";depthCompare="not-equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";depthCompare="greater-equal"]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";depthCompare="always"]
    expected: FAIL

  [:isAsync=true;format="depth32float";depthCompare="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth32float";depthCompare="never"]
    expected: FAIL

  [:isAsync=true;format="depth32float";depthCompare="less"]
    expected: FAIL

  [:isAsync=true;format="depth32float";depthCompare="equal"]
    expected: FAIL

  [:isAsync=true;format="depth32float";depthCompare="less-equal"]
    expected: FAIL

  [:isAsync=true;format="depth32float";depthCompare="greater"]
    expected: FAIL

  [:isAsync=true;format="depth32float";depthCompare="not-equal"]
    expected: FAIL

  [:isAsync=true;format="depth32float";depthCompare="greater-equal"]
    expected: FAIL

  [:isAsync=true;format="depth32float";depthCompare="always"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";depthCompare="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";depthCompare="never"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";depthCompare="less"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";depthCompare="equal"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";depthCompare="less-equal"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";depthCompare="greater"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";depthCompare="not-equal"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";depthCompare="greater-equal"]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";depthCompare="always"]
    expected: FAIL

  [:isAsync=true;format="stencil8";depthCompare="_undef_"]
    expected: FAIL

  [:isAsync=true;format="stencil8";depthCompare="never"]
    expected: FAIL

  [:isAsync=true;format="stencil8";depthCompare="less"]
    expected: FAIL

  [:isAsync=true;format="stencil8";depthCompare="equal"]
    expected: FAIL

  [:isAsync=true;format="stencil8";depthCompare="less-equal"]
    expected: FAIL

  [:isAsync=true;format="stencil8";depthCompare="greater"]
    expected: FAIL

  [:isAsync=true;format="stencil8";depthCompare="not-equal"]
    expected: FAIL

  [:isAsync=true;format="stencil8";depthCompare="greater-equal"]
    expected: FAIL

  [:isAsync=true;format="stencil8";depthCompare="always"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";depthCompare="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";depthCompare="never"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";depthCompare="less"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";depthCompare="equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";depthCompare="less-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";depthCompare="greater"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";depthCompare="not-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";depthCompare="greater-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus";depthCompare="always"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";depthCompare="_undef_"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";depthCompare="never"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";depthCompare="less"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";depthCompare="equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";depthCompare="less-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";depthCompare="greater"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";depthCompare="not-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";depthCompare="greater-equal"]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";depthCompare="always"]
    expected: FAIL

  [:isAsync=true;format="depth32float-stencil8";depthCompare="_undef_"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";depthCompare="never"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";depthCompare="less"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";depthCompare="equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";depthCompare="less-equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";depthCompare="greater"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";depthCompare="not-equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";depthCompare="greater-equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";depthCompare="always"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";depthCompare="_undef_"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";depthCompare="never"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";depthCompare="less"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";depthCompare="equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";depthCompare="less-equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";depthCompare="greater"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";depthCompare="not-equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";depthCompare="greater-equal"]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";depthCompare="always"]
    expected:
      if os == "mac": PASS
      FAIL


[cts.https.html?q=webgpu:api,validation,render_pipeline,depth_stencil_state:depth_write:*]
  [:isAsync=false;format="depth32float";depthWriteEnabled=false]
    expected: FAIL

  [:isAsync=false;format="depth32float";depthWriteEnabled=true]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";depthWriteEnabled=false]
    expected: FAIL

  [:isAsync=false;format="depth16unorm";depthWriteEnabled=true]
    expected: FAIL

  [:isAsync=false;format="stencil8";depthWriteEnabled=false]
    expected: FAIL

  [:isAsync=false;format="stencil8";depthWriteEnabled=true]
    expected: FAIL

  [:isAsync=false;format="depth24plus";depthWriteEnabled=false]
    expected: FAIL

  [:isAsync=false;format="depth24plus";depthWriteEnabled=true]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";depthWriteEnabled=false]
    expected: FAIL

  [:isAsync=false;format="depth24plus-stencil8";depthWriteEnabled=true]
    expected: FAIL

  [:isAsync=true;format="depth32float";depthWriteEnabled=false]
    expected: FAIL

  [:isAsync=true;format="depth32float";depthWriteEnabled=true]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";depthWriteEnabled=false]
    expected: FAIL

  [:isAsync=true;format="depth16unorm";depthWriteEnabled=true]
    expected: FAIL

  [:isAsync=true;format="stencil8";depthWriteEnabled=false]
    expected: FAIL

  [:isAsync=true;format="stencil8";depthWriteEnabled=true]
    expected: FAIL

  [:isAsync=true;format="depth24plus";depthWriteEnabled=false]
    expected: FAIL

  [:isAsync=true;format="depth24plus";depthWriteEnabled=true]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";depthWriteEnabled=false]
    expected: FAIL

  [:isAsync=true;format="depth24plus-stencil8";depthWriteEnabled=true]
    expected: FAIL

  [:isAsync=false;format="depth32float-stencil8";depthWriteEnabled=false]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=false;format="depth32float-stencil8";depthWriteEnabled=true]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";depthWriteEnabled=false]
    expected:
      if os == "mac": PASS
      FAIL

  [:isAsync=true;format="depth32float-stencil8";depthWriteEnabled=true]
    expected:
      if os == "mac": PASS
      FAIL


[cts.https.html?q=webgpu:api,validation,render_pipeline,fragment_state:targets_blend:*]
  [:isAsync=false;component="color"]
    expected: FAIL

  [:isAsync=false;component="alpha"]
    expected: FAIL

  [:isAsync=true;component="color"]
    expected: FAIL

  [:isAsync=true;component="alpha"]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,render_pass,render_pass_descriptor:timestampWrite,query_index:*]
  [:queryIndex=0]
    expected:
      if os == "mac": PASS
      FAIL

  [:queryIndex=1]
    expected:
      if os == "mac": PASS
      FAIL

  [:queryIndex=2]
    expected:
      if os == "mac": PASS
      FAIL

  [:queryIndex=3]
    expected:
      if os == "mac": PASS
      FAIL


[cts.https.html?q=webgpu:api,validation,render_pipeline,fragment_state:pipeline_output_targets:*]
  [:isAsync=false;format="_undef_"]
    expected: FAIL

  [:isAsync=false;format="r8unorm"]
    expected: FAIL

  [:isAsync=false;format="r8uint"]
    expected: FAIL

  [:isAsync=false;format="r8sint"]
    expected: FAIL

  [:isAsync=false;format="r16uint"]
    expected: FAIL

  [:isAsync=false;format="r16sint"]
    expected: FAIL

  [:isAsync=false;format="r16float"]
    expected: FAIL

  [:isAsync=false;format="rg8unorm"]
    expected: FAIL

  [:isAsync=false;format="rg8uint"]
    expected: FAIL

  [:isAsync=false;format="rg8sint"]
    expected: FAIL

  [:isAsync=false;format="r32uint"]
    expected: FAIL

  [:isAsync=false;format="r32sint"]
    expected: FAIL

  [:isAsync=false;format="r32float"]
    expected: FAIL

  [:isAsync=false;format="rg16uint"]
    expected: FAIL

  [:isAsync=false;format="rg16sint"]
    expected: FAIL

  [:isAsync=false;format="rg16float"]
    expected: FAIL

  [:isAsync=false;format="rgba8unorm"]
    expected: FAIL

  [:isAsync=false;format="rgba8unorm-srgb"]
    expected: FAIL

  [:isAsync=false;format="rgba8uint"]
    expected: FAIL

  [:isAsync=false;format="rgba8sint"]
    expected: FAIL

  [:isAsync=false;format="bgra8unorm"]
    expected: FAIL

  [:isAsync=false;format="bgra8unorm-srgb"]
    expected: FAIL

  [:isAsync=false;format="rgb10a2unorm"]
    expected: FAIL

  [:isAsync=false;format="rg32uint"]
    expected: FAIL

  [:isAsync=false;format="rg32sint"]
    expected: FAIL

  [:isAsync=false;format="rg32float"]
    expected: FAIL

  [:isAsync=false;format="rgba16uint"]
    expected: FAIL

  [:isAsync=false;format="rgba16sint"]
    expected: FAIL

  [:isAsync=false;format="rgba16float"]
    expected: FAIL

  [:isAsync=false;format="rgba32uint"]
    expected: FAIL

  [:isAsync=false;format="rgba32sint"]
    expected: FAIL

  [:isAsync=false;format="rgba32float"]
    expected: FAIL

  [:isAsync=true;format="_undef_"]
    expected: FAIL

  [:isAsync=true;format="r8unorm"]
    expected: FAIL

  [:isAsync=true;format="r8uint"]
    expected: FAIL

  [:isAsync=true;format="r8sint"]
    expected: FAIL

  [:isAsync=true;format="r16uint"]
    expected: FAIL

  [:isAsync=true;format="r16sint"]
    expected: FAIL

  [:isAsync=true;format="r16float"]
    expected: FAIL

  [:isAsync=true;format="rg8unorm"]
    expected: FAIL

  [:isAsync=true;format="rg8uint"]
    expected: FAIL

  [:isAsync=true;format="rg8sint"]
    expected: FAIL

  [:isAsync=true;format="r32uint"]
    expected: FAIL

  [:isAsync=true;format="r32sint"]
    expected: FAIL

  [:isAsync=true;format="r32float"]
    expected: FAIL

  [:isAsync=true;format="rg16uint"]
    expected: FAIL

  [:isAsync=true;format="rg16sint"]
    expected: FAIL

  [:isAsync=true;format="rg16float"]
    expected: FAIL

  [:isAsync=true;format="rgba8unorm"]
    expected: FAIL

  [:isAsync=true;format="rgba8unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="rgba8uint"]
    expected: FAIL

  [:isAsync=true;format="rgba8sint"]
    expected: FAIL

  [:isAsync=true;format="bgra8unorm"]
    expected: FAIL

  [:isAsync=true;format="bgra8unorm-srgb"]
    expected: FAIL

  [:isAsync=true;format="rgb10a2unorm"]
    expected: FAIL

  [:isAsync=true;format="rg32uint"]
    expected: FAIL

  [:isAsync=true;format="rg32sint"]
    expected: FAIL

  [:isAsync=true;format="rg32float"]
    expected: FAIL

  [:isAsync=true;format="rgba16uint"]
    expected: FAIL

  [:isAsync=true;format="rgba16sint"]
    expected: FAIL

  [:isAsync=true;format="rgba16float"]
    expected: FAIL

  [:isAsync=true;format="rgba32uint"]
    expected: FAIL

  [:isAsync=true;format="rgba32sint"]
    expected: FAIL

  [:isAsync=true;format="rgba32float"]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,render_pipeline,fragment_state:limits,maxColorAttachmentBytesPerSample,unaligned:*]
  [:formats=["r8unorm","r32float","rgba8unorm","rgba32float","r8unorm"\]]
    expected: FAIL

  [:formats=["r32float","rgba8unorm","rgba32float","r8unorm","r8unorm"\]]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,render_pipeline,fragment_state:targets_write_mask:*]
  [:isAsync=false;writeMask=0]
    expected: FAIL

  [:isAsync=false;writeMask=15]
    expected: FAIL

  [:isAsync=false;writeMask=16]
    expected: FAIL

  [:isAsync=false;writeMask=2147483649]
    expected: FAIL

  [:isAsync=true;writeMask=0]
    expected: FAIL

  [:isAsync=true;writeMask=15]
    expected: FAIL

  [:isAsync=true;writeMask=16]
    expected: FAIL

  [:isAsync=true;writeMask=2147483649]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,render_pass,storeOp:store_op_and_read_only:*]
  [:readonly=true]
    expected: FAIL

  [:readonly=true;depthStoreOp="discard"]
    expected: FAIL

  [:readonly=true;stencilStoreOp="discard"]
    expected: FAIL

  [:readonly=false]
    expected: FAIL

  [:readonly=false;depthReadOnly=true]
    expected: FAIL

  [:readonly=false;stencilReadOnly=true]
    expected: FAIL

  [:readonly="_undef_"]
    expected: FAIL

  [:readonly="_undef_";depthReadOnly=true]
    expected: FAIL

  [:readonly="_undef_";stencilReadOnly=true]
    expected: FAIL
